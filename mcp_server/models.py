# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T18:25:51+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class GetStatus(BaseModel):
    answered_by: Optional[str] = Field('Not Available', title='Answered By')
    error: Optional[str] = Field('Call cant be placed', title='Error')
    option_selected: Optional[str] = Field(['Not Available'], title='Option Selected')
    phone_number: Optional[str] = Field(['Not Available'], title='Phone Number')
    previously_verified_at: Optional[str] = Field(
        ['Not Available'], title='Previously Verified At'
    )
    progress: Optional[str] = Field('Not Available', title='Progress')
    token: Optional[str] = Field('Not Available', title='Token')


class PlaceCall(BaseModel):
    answered_by: Optional[str] = Field('Not Available', title='Answered By')
    error: Optional[str] = Field('Call cant be placed', title='Error')
    option_selected: Optional[str] = Field(['Not Available'], title='Option Selected')
    phone_number: Optional[str] = Field(['Not Available'], title='Phone Number')
    previously_verified_at: Optional[str] = Field(
        ['Not Available'], title='Previously Verified At'
    )
    progress: Optional[str] = Field('Not Available', title='Progress')
    token: Optional[str] = Field('Not Available', title='Token')


class ValidationError(BaseModel):
    loc: List[str] = Field(..., title='Location')
    msg: str = Field(..., title='Message')
    type: str = Field(..., title='Error Type')


class VerifyNameData(BaseModel):
    business_name: Optional[str] = Field('Not Available', title='Business Name')
    city: Optional[str] = Field('Not Available', title='City')
    department_code_and_type: Optional[List[str]] = Field(
        [], title='Department Code And Type'
    )
    entity_type: Optional[str] = Field('Not Available', title='Entity Type')
    is_gstn_verified: Optional[bool] = Field(False, title='Is Gstn Verified')
    nature_of_business: Optional[List[str]] = Field([], title='Nature Of Business')
    pincode: Optional[int] = Field(999999, title='Pincode')
    registration_date: Optional[str] = Field('Not Available', title='Registration Date')
    registration_type: Optional[str] = Field('Not Available', title='Registration Type')
    state: Optional[str] = Field('Not Available', title='State')


class VerifyNameMeta(BaseModel):
    job_id: Optional[str] = Field('111111111111111111111111', title='Job Id')
    job_time: Optional[int] = Field(24, title='Job Time')
    query: str = Field(..., title='Query')


class VerifyPhone(BaseModel):
    data: PlaceCall
    meta: VerifyNameMeta


class HTTPValidationError(BaseModel):
    detail: Optional[List[ValidationError]] = Field(None, title='Detail')


class StatusCall(BaseModel):
    data: GetStatus
    meta: VerifyNameMeta


class VerifyName(BaseModel):
    data: List[VerifyNameData] = Field(..., title='Data')
    meta: VerifyNameMeta
